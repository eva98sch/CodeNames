import pygame
import random
import sys

pygame.init()

red = (180,50,50)
blue = (5,150,255)
white = (255,250,204)
black = (0,0,0)
player = [red, blue]

# who starts
beginner = random.choice(player)
if beginner == red:
    notbeginner = blue
else:
    notbeginner = red

#create list with right amount of each color
SquareColor = []
for i in range (9):
    SquareColor.append(beginner)
for i in range (8):
    SquareColor.append((notbeginner))
for i in range(7):
    SquareColor.append(white)
SquareColor.append(black)

# mix colors to new list
colors = random.sample(SquareColor,len(SquareColor))

# caption
pygame.display.set_caption("Secret Code f√ºr Agenten")

# define methods:

def screenUpdate () :
    pygame.display.update ()

def drawLines(): # the grid
    #rows:
    for i in range (1,5):
         pygame.draw.line(surface, black, (0,i*100), (500,i*100), 5)
    #coloumns:
    for i in range(1,5):
        pygame.draw.line(surface, black, (i*100,0), (i*100,500), 5)
    #starting color in the outer line
    #1st row
    pygame.draw.line(surface, beginner, (0,3),(500,3),10)
    #last row
    pygame.draw.line(surface, beginner, (0,500-3),(500,500-3), 10)
    #1st coloumn
    pygame.draw.line(surface, beginner, (3,0),(3,500),10)
    #last coloumn
    pygame.draw.line(surface, beginner, (500-3,0), (500-3,500),10)

def drawSquares () :
    """
    This method takes the values from the list colors[] and assigns them to each square.
    The list colors[] contains all desired colors in a random order.
    """
    # 1st row:
    pygame.draw.rect(surface, colors[0], [0,0,100,100]) #1st column
    pygame.draw.rect(surface, colors[1], [100, 0, 200, 100]) #2nd column
    pygame.draw.rect(surface, colors[2], [200, 0, 300, 100])
    pygame.draw.rect(surface, colors[3], [300, 0, 400, 100])
    pygame.draw.rect(surface, colors[4], [400, 0, 500, 100])
    # 2nd row:
    pygame.draw.rect(surface, colors[5], [0, 100, 100, 100])
    pygame.draw.rect(surface, colors[6], [100, 100, 200, 100])
    pygame.draw.rect(surface, colors[7], [200, 100, 300, 100])
    pygame.draw.rect(surface, colors[8], [300, 100, 400, 100])
    pygame.draw.rect(surface, colors[9], [400, 100, 500, 100])
    # 3rd row:
    pygame.draw.rect(surface, colors[10], [0, 200, 100, 100])
    pygame.draw.rect(surface, colors[11], [100, 200, 200, 100])
    pygame.draw.rect(surface, colors[12], [200, 200, 300, 100])
    pygame.draw.rect(surface, colors[13], [300, 200, 400, 100])
    pygame.draw.rect(surface, colors[14], [400, 200, 500, 100])
    # 4th row:
    pygame.draw.rect(surface, colors[15], [0, 300, 100, 100])
    pygame.draw.rect(surface, colors[16], [100, 300, 200, 100])
    pygame.draw.rect(surface, colors[17], [200, 300, 300, 100])
    pygame.draw.rect(surface, colors[18], [300, 300, 400, 100])
    pygame.draw.rect(surface, colors[19], [400, 300, 500, 100])
    # 5th row:
    pygame.draw.rect(surface, colors[20], [0, 400, 100, 100])
    pygame.draw.rect(surface, colors[21], [100, 400, 200, 100])
    pygame.draw.rect(surface, colors[22], [200, 400, 300, 100])
    pygame.draw.rect(surface, colors[23], [300, 400, 400, 100])
    pygame.draw.rect(surface, colors[24], [400, 400, 500, 100])

#initialzie surface
surface = pygame.display.set_mode((500,500))
surface.fill (white)
pygame.display.update()

drawSquares()
drawLines()
screenUpdate()

#exit
gameExit = False
while not gameExit:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            gameExit = True

#quit from pygame & python
pygame.quit()
quit()
